services:
  app:
    build: .
    ports:
      - ${API_PORT:-8000}:${API_PORT:-8000}
    volumes:
      - ./app:/app/app
    environment:
      # APPLICATION SETTINGS
      - API_PORT=${API_PORT:-8000}
      - APP_URL=$APP_URL
      - VERIFICATION_URL_PATH=$VERIFICATION_URL_PATH

      # RATE LIMITING SETTINGS
      - RATE_LIMIT_REQUESTS=$RATE_LIMIT_REQUESTS
      - RATE_LIMIT_WINDOW_SECS=$RATE_LIMIT_WINDOW_SECS

      # DATABASE SETTINGS
      - DATABASE_URI=postgresql+asyncpg://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_PORT/$POSTGRES_DB

      # REDIS SETTINGS
      - REDIS_URI=redis://redis:6379

      # CORS SETTINGS
      - CORS_ORIGINS=$CORS_ORIGINS
      - CORS_ALLOW_CREDENTIALS=$CORS_ALLOW_CREDENTIALS
      - CORS_ALLOW_METHODS=$CORS_ALLOW_METHODS
      - CORS_ALLOW_HEADERS=$CORS_ALLOW_HEADERS

      # COOKIE SETTINGS
      - COOKIE_MAX_AGE_SECS=$COOKIE_MAX_AGE_SECS

      # EMAIL SETTINGS
      - SMTP_HOST=$SMTP_HOST
      - SMTP_PORT=$SMTP_PORT
      - SMTP_USER=$SMTP_USER
      - SMTP_PASSWORD=$SMTP_PASSWORD
      - SMTP_FROM_EMAIL=$SMTP_FROM_EMAIL

      # VERIFICATION SETTINGS
      - VERIFICATION_CODE_LENGTH=$VERIFICATION_CODE_LENGTH
      - VERIFICATION_CODE_EXPIRES_HOURS=$VERIFICATION_CODE_EXPIRES_HOURS

      # OAUTH2 SETTINGS
      - GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - APPLE_CLIENT_ID=$APPLE_CLIENT_ID
      - APPLE_CLIENT_SECRET=$APPLE_CLIENT_SECRET
      - APPLE_TEAM_ID=$APPLE_TEAM_ID
      - APPLE_KEY_ID=$APPLE_KEY_ID

      # JWT SETTINGS
      - JWT_SECRET=$JWT_SECRET
      - JWT_ACCESS_TOKEN_EXPIRES_SECS=$JWT_ACCESS_TOKEN_EXPIRES_SECS
      - JWT_REFRESH_TOKEN_EXPIRES_SECS=$JWT_REFRESH_TOKEN_EXPIRES_SECS

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:17.3-alpine3.21
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.2-alpine3.21
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
