[project]
name = "auth-py"
version = "0.1.0"
description = "RFC IETF Compliant Authentication Service"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiosmtplib>=4.0.0",
    "alembic>=1.14.1",
    "asyncpg>=0.30.0",
    "authlib>=1.4.1",
    "cryptography>=44.0.1",
    "fastapi[standard]>=0.115.8",
    "pydantic-settings>=2.8.0",
    "python-jose[cryptography]>=3.4.0",
    "redis[hiredis]>=5.2.1",
    "sqlalchemy[asyncio]>=2.0.38",
]

[dependency-groups]
dev = [
    "coverage>=7.6.12",
    "mypy>=1.15.0",
    "pytest>=8.3.4",
    "ruff>=0.9.7",
    "types-authlib>=1.4.0.20241230",
    "types-python-jose>=3.3.4.20240106",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
include = ["app"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py313"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
